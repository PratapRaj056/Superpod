apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.glao.superpod"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    ext {
        dagger_version = '2.24'
        retrofit_version = '2.6.2'
        room_version = '2.2.0-rc01'
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    /**
     * Dagger
     */
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    /**
     * Retrofit
     */
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'

    /**
     * RxJava
     *
     */
    implementation 'io.reactivex.rxjava2:rxjava:2.2.13'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    /**
     * Implementing Android Architecture Component
     * Includes
     * -> LiveData
     * -> ViewModel
     * -> LifeCycles
     * -> Room
     * -> Paging
     * -> Test Helper
     * -> Rx Java Support for Room, Livedata, Paging
     */

    // ViewModel and LiveData
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    //implementation "android.arch.lifecycle:common-java8:1.1.1"
    kapt "android.arch.lifecycle:compiler:1.1.1"

    // Room
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"

    // Paging
    implementation 'android.arch.paging:runtime:1.0.1'

    // Test helpers for LiveData
    testImplementation 'android.arch.core:core-testing:1.1.1'

    // Test helpers for Room
    testImplementation 'android.arch.persistence.room:testing:1.1.1'

    // RxJava support for Room
    implementation 'android.arch.persistence.room:rxjava2:1.1.1'

    // ReactiveStreams support for LiveData
    implementation 'android.arch.lifecycle:reactivestreams:1.1.1'

    // RxJava support for Paging
    implementation 'android.arch.paging:rxjava2:1.0.1'
    implementation 'org.greenrobot:eventbus:3.1.1'
}
